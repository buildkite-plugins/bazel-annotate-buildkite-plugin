#!/bin/bash
set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/plugin.bash
. "$DIR/../lib/plugin.bash"
# shellcheck source=lib/bazel-bep.bash
. "$DIR/../lib/bazel-bep.bash"

# Get plugin configuration
BEP_FILE=$(plugin_read_config BEP_FILE "")

# Check if we should skip if no BEP file found
SKIP_IF_NO_BEP=$(plugin_read_config SKIP_IF_NO_BEP "false")

# If we still don't have a BEP file, check if it exists at common locations
if [[ -z "${BEP_FILE}" ]]; then
  # Try some common locations
  COMMON_LOCATIONS=(
    "${BUILDKITE_BUILD_CHECKOUT_PATH:-$PWD}/bazel-events.json"
    "${BUILDKITE_BUILD_CHECKOUT_PATH:-$PWD}/bazel-bep.json"
    "${BUILDKITE_BUILD_CHECKOUT_PATH:-$PWD}/bep.json"
  )

  for location in "${COMMON_LOCATIONS[@]}"; do
    if [[ -f "$location" ]]; then
      BEP_FILE="$location"
      echo "Found BEP file at common location: ${BEP_FILE}"
      break
    fi
  done
fi

# Check if we have a BEP file
if [[ -z "${BEP_FILE}" ]]; then
  if [[ "${SKIP_IF_NO_BEP}" == "true" ]]; then
    echo "No BEP file specified and skip_if_no_bep is true, skipping annotation"
    exit 0
  else
    echo "Error: No BEP file specified"
    exit 1
  fi
fi

# Check if the BEP file exists
if [[ ! -f "${BEP_FILE}" ]]; then
  if [[ "${SKIP_IF_NO_BEP}" == "true" ]]; then
    echo "BEP file not found at '${BEP_FILE}' and skip_if_no_bep is true, skipping annotation"
    exit 0
  else
    echo "Error: BEP file not found at '${BEP_FILE}'"
    exit 1
  fi
fi

# Process the BEP file and create the annotation
process_bep "${BEP_FILE}" || {
  status=$?
  echo "Warning: BEP processing returned non-zero status ($status)"
  if [[ "${SKIP_IF_NO_BEP}" == "true" ]]; then
    echo "skip_if_no_bep is true, ignoring error"
    exit 0
  else
    exit $status
  fi
}
